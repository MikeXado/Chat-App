{"version":3,"file":"static/js/826.2f6ac5d7.chunk.js","mappings":"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","sources":["components/chat/HeaderChat.jsx","components/chat/navbar/UserMenuDropDown.jsx","components/chat/navbar/NavbarCurrentUser.jsx","components/chat/navbar/RegisteredUsers.jsx","components/chat/NavbarChat.jsx","components/messages/NonSelectedChat.jsx","components/messages/Messages.jsx","components/messages/Board.jsx","components/messages/Form.jsx","components/chat/ChatLogic.jsx","pages/chat/Chat.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { IconBrandBadoo, IconBrightnessDown } from \"@tabler/icons\";\r\nimport { changeMode, changeOpened } from \"../../redux/slices/chatSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function HeaderChat() {\r\n  const dispatch = useDispatch();\r\n  const darkModeState = useSelector((state) => state.darkMode);\r\n  const navOpen = useSelector((state) => state.opened);\r\n  return (\r\n    <header\r\n      className={\"header\" + (darkModeState ? \" elements-dark\" : \"\")}\r\n      style={{ borderBottom: \"1px solid #cccccc\" }}\r\n    >\r\n      <div className=\"header__logo-burger\">\r\n        <div className=\"logo\">\r\n          <IconBrandBadoo\r\n            color={darkModeState ? \"white\" : \"#0f54ae\"}\r\n            className=\"logo__img\"\r\n            size={30}\r\n          />\r\n          <div className=\"logo__text\">Chat-App</div>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"burger\" +\r\n            (navOpen ? \" active-burger\" : \"\") +\r\n            (darkModeState ? \" dark-mode__burger\" : \"\")\r\n          }\r\n          onClick={() => {\r\n            dispatch(changeOpened());\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"header__dark-switcher\">\r\n        <IconBrightnessDown\r\n          color={darkModeState ? \"white\" : \"#0f54ae\"}\r\n          size={40}\r\n          onClick={() => {\r\n            dispatch(changeMode());\r\n          }}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { IconArrowNarrowRight } from \"@tabler/icons\";\r\nimport { auth } from \"../../../firebase\";\r\nimport { signOut } from \"firebase/auth\";\r\n\r\nconst signOutGoogle = () => {\r\n  signOut(auth)\r\n    .then(() => {\r\n      console.log(\"success\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"error\", error);\r\n    });\r\n};\r\n\r\nexport default function UserMenuDropDown() {\r\n  const [opened, setOpened] = useState(false);\r\n\r\n  return (\r\n    <div className=\"popover\">\r\n      <div className=\"popover__target\">\r\n        <IconArrowNarrowRight\r\n          className=\"arrow-logout\"\r\n          onClick={() => setOpened((o) => !o)}\r\n        />\r\n      </div>\r\n      <div className={\"popover__dropdown\" + (opened ? \" active-dropdown\" : \"\")}>\r\n        <button className=\"btn\" onClick={signOutGoogle}>\r\n          Log Out\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport UserMenuDropDown from \"./UserMenuDropDown\";\r\nimport { auth } from \"../../../firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nexport default function NavbarCurrentUser() {\r\n  const [user] = useAuthState(auth);\r\n  return (\r\n    <div className=\"navbar-user\">\r\n      <div className=\"user\">\r\n        <img\r\n          className=\"navbar-user__avatar avatar item\"\r\n          src={user && user.photoURL}\r\n          alt=\"avatar\"\r\n          referrerPolicy=\"no-referrer\"\r\n        />\r\n        <div className=\"navbar-user__info info-user item\">\r\n          <div className=\"info-user__name\">{user && user.displayName}</div>\r\n          <div className=\"info-user__email\">{user && user.email}</div>\r\n        </div>\r\n        <UserMenuDropDown />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../../firebase\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  setDoc,\r\n  doc,\r\n  getDoc,\r\n} from \"firebase/firestore\";\r\nimport { auth } from \"../../../firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getClickedUserUid,\r\n  changeOpened,\r\n} from \"../../../redux/slices/chatSlice\";\r\nexport default function RegisteredUsers() {\r\n  const [users, setUsers] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"users\"), orderBy(\"timeStamp\"));\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      let users = [];\r\n      querySnapshot.forEach((user) => {\r\n        users.push({ ...user.data(), id: user.id });\r\n      });\r\n      setUsers(users);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const addChat = async (user) => {\r\n    const combinedUid =\r\n      auth.currentUser?.uid > user.uid\r\n        ? auth.currentUser?.uid + user.uid\r\n        : user.uid + auth.currentUser?.uid;\r\n    dispatch(getClickedUserUid({ uid: combinedUid }));\r\n    const res = await getDoc(doc(db, \"chats\", combinedUid));\r\n    if (!res.exists()) {\r\n      await setDoc(doc(db, \"chats\", combinedUid), { messages: [] });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registered-users\">\r\n      {users.map((user) =>\r\n        user.uid !== auth.currentUser?.uid ? (\r\n          <div\r\n            key={user.id}\r\n            className=\"registered-user\"\r\n            onClick={() => {\r\n              addChat(user);\r\n              dispatch(changeOpened());\r\n            }}\r\n          >\r\n            <img\r\n              className=\"avatar\"\r\n              src={user?.icon}\r\n              alt=\"avatar\"\r\n              referrerPolicy=\"no-referrer\"\r\n            />\r\n            <div className=\"registered-user__info\">\r\n              <div className=\"registered-user__name\">{user.displayName}</div>\r\n              <div className=\"registered-user__email\">{user.email}</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div key={user.id}></div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { auth } from \"../../firebase\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport NavbarCurrentUser from \"./navbar/NavbarCurrentUser\";\r\nimport RegisteredUsers from \"./navbar/RegisteredUsers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nexport default function NavbarChat() {\r\n  const [currentUser] = useAuthState(auth);\r\n  const darkModeState = useSelector((state) => state.darkMode);\r\n  const opened = useSelector((state) => state.opened);\r\n  return (\r\n    <div\r\n      className={\r\n        \"navbar\" +\r\n        (opened ? \" navbar-open\" : \"\") +\r\n        (darkModeState ? \" elements-dark\" : \"\")\r\n      }\r\n    >\r\n      <div className=\"nav-content\">\r\n        <RegisteredUsers />\r\n        <NavbarCurrentUser />\r\n      </div>\r\n      {!currentUser && <Navigate replace to=\"/\" />}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NonSelectedChat() {\r\n  return <div className=\"not-selected-chat\">Choose an chat</div>;\r\n}\r\n","import React from \"react\";\r\nimport { auth } from \"../../firebase\";\r\nexport default function Messages({ message }) {\r\n  const userId = auth.currentUser.uid;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"board-item\" +\r\n        (userId === message.uid ? \" send-message\" : \" recieved-message\")\r\n      }\r\n    >\r\n      <img\r\n        className=\"avatar item\"\r\n        src={message.icon}\r\n        alt=\"avatar\"\r\n        referrerPolicy=\"no-referrer\"\r\n      />\r\n      <div className=\"board-message__text item\">\r\n        <p className=\"item__name\">{message.dispalyName}</p>\r\n        <p className=\"item__text\">{message.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { doc, onSnapshot, orderBy } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport Messages from \"./Messages\";\r\nimport { useSelector } from \"react-redux\";\r\nexport default function Board({ chatScroll }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const currentClickedUser = useSelector((u) => u.currentClickedUser);\r\n\r\n  useEffect(() => {\r\n    if (currentClickedUser === \"\") return;\r\n    const unsubscribe = onSnapshot(\r\n      doc(db, \"chats\", currentClickedUser),\r\n      orderBy(\"timeStamp\"),\r\n      (doc) => {\r\n        doc.exists() && setMessages(doc.data());\r\n      }\r\n    );\r\n\r\n    return () => unsubscribe();\r\n  }, [currentClickedUser]);\r\n\r\n  useEffect(() => {\r\n    chatScroll.current.scrollTop = chatScroll.current.scrollHeight;\r\n  }, [messages, chatScroll]);\r\n\r\n  return (\r\n    <div className=\"board\" ref={chatScroll}>\r\n      {messages.messages?.length > 0 ? (\r\n        messages?.messages.map((message) => {\r\n          return <Messages key={message.id} message={message} />;\r\n        })\r\n      ) : (\r\n        <div className=\"no-messages-yet\">No Messages Yet</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport { doc, updateDoc, arrayUnion } from \"firebase/firestore\";\r\nimport { auth } from \"../../firebase\";\r\nimport Picker from \"@emoji-mart/react\";\r\nimport { IconMoodSmile } from \"@tabler/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 } from \"uuid\";\r\nexport default function Form({ chatScroll }) {\r\n  const [messagesState, setMessagesState] = useState(\"\");\r\n  const [emojiOpen, setEmojiOpen] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const user = auth.currentUser;\r\n  const clickedUserUid = useSelector((user) => user.currentClickedUser);\r\n  const darkModeState = useSelector((state) => state.darkMode);\r\n  const getInput = (e) => {\r\n    let target = e.target.value;\r\n    setMessagesState(target);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://cdn.jsdelivr.net/npm/@emoji-mart/data\").then((response) => {\r\n      setData(response.json());\r\n    });\r\n  });\r\n\r\n  const addMessages = async () => {\r\n    if (messagesState !== \"\" && clickedUserUid !== \"\") {\r\n      const timeStamp = new Date();\r\n      setMessagesState(\"\");\r\n      setEmojiOpen(false);\r\n      await updateDoc(doc(db, \"chats\", clickedUserUid), {\r\n        messages: arrayUnion({\r\n          id: v4(),\r\n          message: messagesState,\r\n          dispalyName: user?.displayName,\r\n          icon: user?.photoURL,\r\n          uid: user?.uid,\r\n          timeStamp: timeStamp,\r\n        }),\r\n      });\r\n      chatScroll.current.scrollTop = chatScroll.current.scrollHeight;\r\n    }\r\n  };\r\n  const handleEmojies = (e) => {\r\n    let sym = e.unified.split(\"-\");\r\n    let codesArray = [];\r\n    sym.forEach((el) => codesArray.push(\"0x\" + el));\r\n    let emoji = String.fromCodePoint(...codesArray);\r\n    setMessagesState(messagesState + emoji);\r\n  };\r\n\r\n  const handleEmojiOpen = () => {\r\n    setEmojiOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      <textarea\r\n        className={\"messages__input\" + (darkModeState ? \" elements-dark\" : \"\")}\r\n        placeholder=\"Message here...\"\r\n        style={{\r\n          ...(darkModeState ? { backgroundColor: \"#212121 !important\" } : {}),\r\n        }}\r\n        value={messagesState}\r\n        onChange={getInput}\r\n        minrows={1.3}\r\n        maxrows={10}\r\n        maxLength={800}\r\n      />\r\n\r\n      <IconMoodSmile\r\n        onClick={handleEmojiOpen}\r\n        className=\"emojie-picker\"\r\n        size={30}\r\n      />\r\n      <div className={\"emojie\" + (!emojiOpen ? \" hidden\" : \"\")}>\r\n        <Picker\r\n          data={data}\r\n          categories={[\"people\"]}\r\n          theme=\"light\"\r\n          onEmojiSelect={handleEmojies}\r\n        />\r\n      </div>\r\n      <button className=\"form-button\" onClick={addMessages}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport NonSelectedChat from \"../messages/NonSelectedChat\";\r\nimport Board from \"../messages/Board\";\r\nimport Form from \"../messages/Form\";\r\nexport default function ChatLogic() {\r\n  const chatScroll = useRef(null);\r\n  const clickedUserUid = useSelector((u) => u.currentClickedUser);\r\n  const darkModeState = useSelector((state) => state.darkMode);\r\n  return (\r\n    <main className={darkModeState ? \" board-dark\" : \"\"}>\r\n      {clickedUserUid !== \"\" ? (\r\n        <>\r\n          <Board chatScroll={chatScroll} />\r\n          <Form chatScroll={chatScroll} />{\" \"}\r\n        </>\r\n      ) : (\r\n        <NonSelectedChat />\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport HeaderChat from \"../../components/chat/HeaderChat\";\r\nimport NavbarChat from \"../../components/chat/NavbarChat\";\r\n\r\nimport ChatLogic from \"../../components/chat/ChatLogic\";\r\n\r\nexport default function Chat() {\r\n  return (\r\n    <div className=\"chat\">\r\n      <HeaderChat />\r\n      <NavbarChat />\r\n      <ChatLogic />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["HeaderChat","dispatch","useDispatch","darkModeState","useSelector","state","darkMode","navOpen","opened","className","style","borderBottom","color","size","onClick","changeOpened","changeMode","signOutGoogle","signOut","auth","then","console","log","catch","error","UserMenuDropDown","useState","setOpened","o","NavbarCurrentUser","useAuthState","user","src","photoURL","alt","referrerPolicy","displayName","email","RegisteredUsers","users","setUsers","useEffect","q","query","collection","db","orderBy","unsubscribe","onSnapshot","querySnapshot","forEach","push","data","id","addChat","combinedUid","uid","getClickedUserUid","getDoc","doc","exists","setDoc","messages","map","icon","NavbarChat","currentUser","replace","to","NonSelectedChat","Messages","message","userId","dispalyName","Board","chatScroll","setMessages","currentClickedUser","u","current","scrollTop","scrollHeight","ref","length","Form","messagesState","setMessagesState","emojiOpen","setEmojiOpen","setData","clickedUserUid","fetch","response","json","addMessages","timeStamp","Date","updateDoc","arrayUnion","v4","placeholder","backgroundColor","value","onChange","e","target","minrows","maxrows","maxLength","prev","categories","theme","onEmojiSelect","sym","unified","split","codesArray","el","emoji","String","fromCodePoint","ChatLogic","useRef","Chat"],"sourceRoot":""}