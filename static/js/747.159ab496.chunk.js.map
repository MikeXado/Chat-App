{"version":3,"file":"static/js/747.159ab496.chunk.js","mappings":"0RASe,SAASA,EAAT,GAA+B,IAAfC,EAAc,EAAdA,WAC7B,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,MAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAeC,EAAAA,EAAAA,IAAaC,EAAAA,GAArBC,GAAP,eACMC,GAAiBC,EAAAA,EAAAA,KAAY,SAACF,GAAD,OAAUA,EAAKG,kBAAf,IAC7BC,GAAgBF,EAAAA,EAAAA,KAAY,SAACG,GAAD,OAAWA,EAAMC,QAAjB,KAMlCC,EAAAA,EAAAA,YAAU,WACRC,MAAM,iDAAiDC,MAAK,SAACC,GAC3Db,EAAQa,EAASC,OAClB,GACF,IAED,IAAMC,EAAW,yCAAG,4FACI,KAAlBpB,GAA2C,KAAnBS,EADV,uBAEVY,EAAY,IAAIC,KACtBrB,EAAiB,IACjBE,GAAa,GAJG,UAKVoB,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAShB,GAAiB,CAChDiB,UAAUC,EAAAA,EAAAA,IAAW,CACnBC,IAAIC,EAAAA,EAAAA,KACJC,QAAS9B,EACT+B,YAAavB,EAAKwB,YAClBC,KAAMzB,EAAK0B,SACXC,IAAK3B,EAAK2B,IACVd,UAAWA,MAZC,OAehBvB,EAAWsC,QAAQC,UAAYvC,EAAWsC,QAAQE,aAflC,2CAAH,qDA8BjB,OACE,iBAAKC,UAAU,WAAf,WACE,qBACEA,UAAW,mBAAqB3B,EAAgB,iBAAmB,IACnE4B,YAAY,kBACZC,OAAK,UACC7B,EAAgB,CAAE8B,gBAAiB,sBAAyB,CAAC,GAEnEC,MAAO3C,EACP4C,SAlDW,SAACC,GAChB,IAAIC,EAASD,EAAEC,OAAOH,MACtB1C,EAAiB6C,EAClB,EAgDKC,QAAS,IACTC,QAAS,GACTC,UAAW,OAGb,SAAC,MAAD,CACEC,QApBkB,WACtB/C,GAAa,SAACgD,GAAD,OAAWA,CAAX,GACd,EAmBKZ,UAAU,gBACVa,KAAM,MAER,gBAAKb,UAAW,UAAarC,EAAwB,GAAZ,WAAzC,UACE,SAAC,IAAD,CACEE,KAAMA,EACNiD,WAAY,CAAC,UACbC,MAAM,QACNC,cArCc,SAACV,GACrB,IAAIW,EAAMX,EAAEY,QAAQC,MAAM,KACtBC,EAAa,GACjBH,EAAII,SAAQ,SAACC,GAAD,OAAQF,EAAWG,KAAK,KAAOD,EAA/B,IACZ,IAAIE,EAAQC,OAAOC,cAAP,MAAAD,OAAwBL,GACpC1D,EAAiBD,EAAgB+D,EAClC,OAkCG,mBAAQxB,UAAU,cAAcW,QAAS9B,EAAzC,oBAKL,C","sources":["components/messages/Form.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport { doc, updateDoc, arrayUnion } from \"firebase/firestore\";\r\nimport { auth } from \"../../firebase\";\r\nimport Picker from \"@emoji-mart/react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { IconMoodSmile } from \"@tabler/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 } from \"uuid\";\r\nexport default function Form({ chatScroll }) {\r\n  const [messagesState, setMessagesState] = useState(\"\");\r\n  const [emojiOpen, setEmojiOpen] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [user] = useAuthState(auth);\r\n  const clickedUserUid = useSelector((user) => user.currentClickedUser);\r\n  const darkModeState = useSelector((state) => state.darkMode);\r\n  const getInput = (e) => {\r\n    let target = e.target.value;\r\n    setMessagesState(target);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://cdn.jsdelivr.net/npm/@emoji-mart/data\").then((response) => {\r\n      setData(response.json());\r\n    });\r\n  });\r\n\r\n  const addMessages = async () => {\r\n    if (messagesState !== \"\" && clickedUserUid !== \"\") {\r\n      const timeStamp = new Date();\r\n      setMessagesState(\"\");\r\n      setEmojiOpen(false);\r\n      await updateDoc(doc(db, \"chats\", clickedUserUid), {\r\n        messages: arrayUnion({\r\n          id: v4(),\r\n          message: messagesState,\r\n          dispalyName: user.displayName,\r\n          icon: user.photoURL,\r\n          uid: user.uid,\r\n          timeStamp: timeStamp,\r\n        }),\r\n      });\r\n      chatScroll.current.scrollTop = chatScroll.current.scrollHeight;\r\n    }\r\n  };\r\n  const handleEmojies = (e) => {\r\n    let sym = e.unified.split(\"-\");\r\n    let codesArray = [];\r\n    sym.forEach((el) => codesArray.push(\"0x\" + el));\r\n    let emoji = String.fromCodePoint(...codesArray);\r\n    setMessagesState(messagesState + emoji);\r\n  };\r\n\r\n  const handleEmojiOpen = () => {\r\n    setEmojiOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      <textarea\r\n        className={\"messages__input\" + (darkModeState ? \" elements-dark\" : \"\")}\r\n        placeholder=\"Message here...\"\r\n        style={{\r\n          ...(darkModeState ? { backgroundColor: \"#212121 !important\" } : {}),\r\n        }}\r\n        value={messagesState}\r\n        onChange={getInput}\r\n        minrows={1.3}\r\n        maxrows={10}\r\n        maxLength={800}\r\n      />\r\n\r\n      <IconMoodSmile\r\n        onClick={handleEmojiOpen}\r\n        className=\"emojie-picker\"\r\n        size={30}\r\n      />\r\n      <div className={\"emojie\" + (!emojiOpen ? \" hidden\" : \"\")}>\r\n        <Picker\r\n          data={data}\r\n          categories={[\"people\"]}\r\n          theme=\"light\"\r\n          onEmojiSelect={handleEmojies}\r\n        />\r\n      </div>\r\n      <button className=\"form-button\" onClick={addMessages}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Form","chatScroll","useState","messagesState","setMessagesState","emojiOpen","setEmojiOpen","data","setData","useAuthState","auth","user","clickedUserUid","useSelector","currentClickedUser","darkModeState","state","darkMode","useEffect","fetch","then","response","json","addMessages","timeStamp","Date","updateDoc","doc","db","messages","arrayUnion","id","v4","message","dispalyName","displayName","icon","photoURL","uid","current","scrollTop","scrollHeight","className","placeholder","style","backgroundColor","value","onChange","e","target","minrows","maxrows","maxLength","onClick","prev","size","categories","theme","onEmojiSelect","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint"],"sourceRoot":""}